# Dockerfile for TTKi AI Desktop Environment
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV DISPLAY=:50
ENV VNC_PORT=5950
ENV NOVNC_PORT=4051
ENV USER=ttki
ENV HOME=/home/$USER

# Install system packages
RUN apt-get update && apt-get install -y \
    # VNC and desktop
    tigervnc-standalone-server \
    tigervnc-common \
    openbox \
    tint2 \
    pcmanfm \
    # Web VNC
    websockify \
    novnc \
    # Development tools
    git \
    curl \
    wget \
    nano \
    vim \
    python3 \
    python3-pip \
    nodejs \
    npm \
    # GUI applications
    firefox \
    konsole \
    xterm \
    # System utilities
    sudo \
    dbus-x11 \
    x11-utils \
    x11-xserver-utils \
    xfonts-base \
    # Clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create user
RUN useradd -m -s /bin/bash $USER \
    && echo "$USER:password" | chpasswd \
    && usermod -aG sudo $USER

# Switch to user
USER $USER
WORKDIR $HOME

# Create VNC directories
RUN mkdir -p $HOME/.vnc \
    && mkdir -p $HOME/.config/openbox

# Configure VNC
RUN echo "password" | vncpasswd -f > $HOME/.vnc/passwd \
    && chmod 600 $HOME/.vnc/passwd

# Create VNC startup script
RUN cat > $HOME/.vnc/xstartup << 'EOF'
#!/bin/bash
export XKL_XMODMAP_DISABLE=1
unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS

# Start D-Bus
if [ -x /usr/bin/dbus-launch ] && [ -z "$DBUS_SESSION_BUS_ADDRESS" ]; then
    eval $(dbus-launch --sh-syntax --exit-with-session)
fi

# Start window manager
openbox-session &

# Start panel
tint2 &

# Wait a bit then start applications
sleep 2

# Start terminal
konsole &

# Keep running
while true; do
    sleep 3600
done
EOF

RUN chmod +x $HOME/.vnc/xstartup

# Configure Openbox
RUN cat > $HOME/.config/openbox/autostart << 'EOF'
# Start tint2 panel
tint2 &

# Start file manager daemon
pcmanfm --daemon &
EOF

# Configure tint2 panel
RUN mkdir -p $HOME/.config/tint2 \
    && cat > $HOME/.config/tint2/tint2rc << 'EOF'
# Tint2 config
panel_items = TSC
panel_position = bottom center horizontal
panel_size = 100% 32
panel_background_id = 1

taskbar_mode = multi_desktop
task_maximum_size = 150 35

systray_padding = 4 4 4
systray_background_id = 0

clock_fmt = %H:%M
clock_padding = 8 0

background_color = #000000 60
border_color = #ffffff 20
EOF

# Install VS Code
RUN curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /tmp/microsoft.gpg \
    && cp /tmp/microsoft.gpg /etc/apt/trusted.gpg.d/packages.microsoft.gpg \
    && echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list \
    && apt-get update \
    && apt-get install -y code \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create startup script
RUN cat > $HOME/start_desktop.sh << 'EOF'
#!/bin/bash
set -e

echo "🖥️  Starting TTKi AI Desktop Environment..."

# Start VNC server
echo "Starting VNC server on display :50..."
vncserver :50 -geometry 1024x768 -depth 24 -localhost no

# Wait for VNC to start
sleep 3

# Start noVNC/websockify
echo "Starting noVNC web interface on port 4051..."
websockify --web /usr/share/novnc 4051 localhost:5950 &

echo "✅ Desktop environment ready!"
echo "🌐 Access via: http://localhost:4051/vnc.html"
echo "🔗 VNC Direct: localhost:5950"

# Keep container running
tail -f /dev/null
EOF

RUN chmod +x $HOME/start_desktop.sh

# Expose ports
EXPOSE 5950 4051

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:4051/ || exit 1

# Start command
CMD ["./start_desktop.sh"]
